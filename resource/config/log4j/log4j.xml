<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd"> 
<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/'>
<!-- 
Log4j 分为3部分: logger，appender，layout
LEVEL: OFF, FATAL, ERROR, WARN, INFO, DEBUG, ALL 
Layout
%c  列出logger名字空间的全称，如果加上{<层数>}表示列出从最内层算起的指定层数的名字空间
	假设当前logger名字空间是“a.b.c” 
	%c a.b.c 
	%c{2} b.c 
	%20c （若名字空间长度小于20，则左边用空格填充） 
	%-20c （若名字空间长度小于20，则右边用空格填充） 
	%.30c （若名字空间长度超过30，截去多余字符） 
	%20.30c （若名字空间长度小于20，则左边用空格填充；若名字空间长度超过30，截去多余字符） 
	%-20.30c （若名字空间长度小于20，则右边用空格填充；若名字空间长度超过30，截去多余字符） 
%C 列出调用logger的类的全名（包含包路径） 假设当前类是“org.apache.xyz.SomeClass” （耗时）
	%C org.apache.xyz.SomeClass 
	%C{1} SomeClass 
%d 显示日志记录时间，{<日期格式>}使用ISO8601定义的日期格式
    %d{yyyy/MM/dd HH:mm:ss,SSS} 2005/10/12 22:23:30,117 
	%d{ABSOLUTE} 22:23:30,117 
	%d{DATE} 12 Oct 2005 22:23:30,117 
	%d{ISO8601} 2005-10-12 22:23:30,117 
%F 显示调用logger的源文件名
    %F MyClass.java 
%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数 
    %l MyClass.main(MyClass.java:129) 
%L 显示调用logger的代码行 
    %L 129 
%m 显示输出消息 
	%m This is a message for debug.  
%M 显示调用logger的方法名
     %M main 
%n 当前平台下的换行符
     %n Windows平台下表示\r\n
         UNIX平台下表示\n 
%p 显示该条日志的优先级
     %p INFO 
%r 显示从程序启动时到记录该条日志时已经经过的毫秒数
     %r 1215 
%t 输出产生该日志事件的线程名
      %t MyClass 
%x 按NDC（Nested Diagnostic Context，线程堆栈）顺序输出日志 
        假设某程序调用顺序是MyApp调用com.foo.Bar 
	%c %x - %m%n MyApp - Call com.foo.Bar.
	com.foo.Bar - Log in Bar
	MyApp - Return to MyApp.  
%X 按MDC（Mapped Diagnostic Context，线程映射表）输出日志。通常用于多个客户端连接同一台服务器，
       方便服务器区分是那个客户端访问留下来的日志。
   %X{5} （记录代号为5的客户端的日志） 
%% 显示一个百分号 
       %% % 
"C"，"F"，"L"，"M" "|" 这几个配置项很消耗系统资源，生产系统中不要配置这几项
在输出错误日志时使用error(Object msg, Throwable t)进行输出

req.id 本次请求id  用户编码：请求毫秒数：客户ip
req.uri 请求路径 
req.queryString 请求queryString
[%X{req.id}- %X{req.uri}]
//-->
 <!-- 开发环境使用 -->
<appender name="STDOUT" class="org.apache.log4j.ConsoleAppender"> 
	<layout class="org.apache.log4j.PatternLayout"> 
		<param name="ConversionPattern" value="%c--[%X{req.id}]--%p--%d{ISO8601}--%n-- %m%n"/> 
	</layout>
	<filter class="org.apache.log4j.varia.LevelRangeFilter"> 
		<param name="LevelMin" value="DEBUG" /> 
		<param name="LevelMax" value="FATAL" /> 
	</filter> 
</appender>
<appender name="STDOUT_SQL" class="org.apache.log4j.ConsoleAppender"> 
	<layout class="com.redfire.framework.logging.log4j.Log4jSqlPrintLayout"> 
		<param name="ConversionPattern" value="%c--[%X{req.id}]--%p--%d{ISO8601}--%n-- %m%n"/> 
	</layout>
	<filter class="org.apache.log4j.varia.LevelRangeFilter"> 
		<param name="LevelMin" value="DEBUG" /> 
		<param name="LevelMax" value="FATAL" /> 
	</filter> 
</appender>
<appender name="FILESTORE" class="org.apache.log4j.RollingFileAppender"> 
	<param name="File" value="${appLog.home}/WEB-INF/logs/app-debug.log"/> 
	<param name="Append" value="true"/> 
	<param name="MaxFileSize" value="500KB"/> 
	<param name="MaxBackupIndex" value="5"/> 
	<layout class="org.apache.log4j.PatternLayout"> 
		<param name="ConversionPattern" value="%c--[%X{req.id}]--%p--%d{ISO8601}--%n-- %m%n"/> 
	</layout> 
	<filter class="org.apache.log4j.varia.LevelRangeFilter"> 
		<param name="LevelMin" value="DEBUG" /> 
		<param name="LevelMax" value="FATAL" /> 
	</filter> 
</appender>
<!-- 部署环境使用 -->
<appender name="DEPLOY_STORE" class="org.apache.log4j.RollingFileAppender"> 
	<param name="File" value="${appLog.home}/WEB-INF/logs/app-error.log"/> 
	<param name="Append" value="true"/> 
	<param name="MaxFileSize" value="500KB"/> 
	<param name="MaxBackupIndex" value="5"/> 
	<layout class="org.apache.log4j.PatternLayout"> 
		<param name="ConversionPattern" value="%c %d{ISO8601}%n----[%X{req.id}]--%p%n--%m%n%n"/> 
	</layout> 
	<filter class="org.apache.log4j.varia.LevelRangeFilter"> 
		<param name="LevelMin" value="ERROR" /> 
		<param name="LevelMax" value="FATAL" /> 
	</filter> 
</appender>
<!-- 
logger 是 logger的类型 
配置 additivity=false 表明这种类型的logger日志不会传递到 父类型appender中去 
如果不配置(默认值为true)  当子logger 的 level =DEBUG 父logger的 level =ERROR 也会传递到父 appender
 -->
 <logger name="org.springframework" additivity="false">
  		<level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger>
  <logger name="com.opensymphony.xwork2" additivity="false">
        <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger>

 <logger name="org.codehaus.xfire" additivity="false">
         <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger>
  <logger name="org.apache.struts2" additivity="false">
         <level value="DEBUG" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger>
 <logger name="org.apache.struts2.util.fs" additivity="false">
         <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger>

 <!-- 修改为debug　模式可打印 sql -->
  <logger name="org.apache.ibatis" additivity="false">
        <level value="DEBUG" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 
  <logger name="java.sql" additivity="false">
        <level value="DEBUG" />
		<appender-ref ref="STDOUT_SQL"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 
 <logger name="java.sql.PreparedStatement" additivity="false">
        <level value="DEBUG" />
		<appender-ref ref="STDOUT_SQL"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 

 <logger name="org.apache.commons.digester" additivity="false">
         <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 
 <logger name="org.apache.commons.betwixt" additivity="false">
         <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 
  <logger name="org.apache.commons.beanutils" additivity="false">
        <level value="ERROR" />
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="FILESTORE"/> 
 </logger> 
 <logger name="com.peak.framework" additivity="false">
         <level value="DEBUG" />
		 <appender-ref ref="STDOUT"/> 
		 <appender-ref ref="FILESTORE"/> 
 </logger> 
<root>
	<appender-ref ref="STDOUT"/> 
	<appender-ref ref="FILESTORE"/> 
</root>
</log4j:configuration>